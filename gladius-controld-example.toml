############################################
# Copy and rename to gladius-controld-bak.toml #
############################################

# Default Gladius Control Daemon Config
version               = "0.5.0"
build                 = 20180821

[logging]
  path                = "./logs/"

[directory]
  # default wallet location
  # unix-based, ~/.config/gladius/wallet
  base                = "$home/.config/gladius/"
  wallet              = "wallet"
[P2P]
  bindPort            = 7946
  advertisePort       = 7946
  BindAddress         = "0.0.0.0"
  verifyOverride      = true # Toggle IsInPoolAndVerified override, true == bypass

[blockchain]
  provider            = "https://ropsten.infura.io/tjqLYxxGIUp0NylVCiWw"
  poolAddress         = "0x89686Bc2fe2F2D8a16928ec7d9b49076f01AA612"
  marketAddress       = "0xc4dfb5c9e861eeae844795cfb8d30b77b78bbc38"
  poolManagerAddress  = "0x1f136d7b6308870ed334378f381c9f56d04c3aba"

[nodeManager]
  [nodeManager.config]
    name              = "GladiusNodeControlDaemon"
    displayName       = "Gladius Node Manager"
    description       = "Gladius Control Daemon"
    debug             = true # Toggle API Debugging
    port              = "3001"

[poolManager]
  [poolManager.config]
    name              = "GladiusPoolControlDaemon"
    displayName       = "Gladius Pool Manager"
    description       = "Gladius Control Daemon"
    debug             = true # Toggle API Debugging
    port              = "3000"
  [poolManager.database]
    type              = "postgres" # only supported db type
    host              = "127.0.0.1"
    port              = "5432"
    user              = "some-user"
    name              = "some-database-name"
    password          = "some-password"
    ssl               = false # true / false

[applicationServer]
  [applicationServer.config]
    name              = "GladiusApplicationServerControlDaemon"
    displayName       = "Gladius Application Server"
    description       = "Gladius Control Daemon"
    debug             = true # Toggle API Debugging
    port              = "3333"
  [applicationServer.database]
    type              = "postgres" # only supported db type
    host              = "127.0.0.1"
    port              = "5432"
    user              = "some-user"
    name              = "some-database-name"
    password          = "some-password"
    ssl               = false # true / false
